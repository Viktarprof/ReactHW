{"ast":null,"code":"const defaultState = [{\n  id: 1,\n  title: 'Велосипед',\n  count: 5\n}, {\n  id: 2,\n  title: 'Самокат',\n  count: 4\n}, {\n  id: 3,\n  title: 'Гантели',\n  count: 7\n}, {\n  id: 4,\n  title: 'Ракетки',\n  count: 1\n}];\nconst DERC_COUNT = 'DERC_COUNT';\nconst INCR_COUNT = 'INCR_COUNT';\nconst DELL_PRODUCT = 'DELL_PRODUCT';\nconst RESET_COUNT = 'RESET_COUNT';\nexport const countReduser = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DERC_COUNT:\n      return state.map(el => {\n        if (el.id == action.payload) {\n          return {\n            ...el,\n            count: el.count - 1\n          };\n        }\n        return el;\n      });\n    case INCR_COUNT:\n      return {\n        ...state,\n        count: state.count + action.payload\n      };\n    case RESET_COUNT:\n      return {\n        ...state,\n        count: 0\n      };\n    default:\n      return state;\n  }\n};\nexport const decrByPayloadAction = payload => ({\n  type: DERC_COUNT,\n  payload\n});\nexport const incrByPayloadAction = payload => ({\n  type: INCR_COUNT,\n  payload\n});\nexport const dellProduct = {};","map":{"version":3,"names":["defaultState","id","title","count","DERC_COUNT","INCR_COUNT","DELL_PRODUCT","RESET_COUNT","countReduser","state","arguments","length","undefined","action","type","map","el","payload","decrByPayloadAction","incrByPayloadAction","dellProduct"],"sources":["/Users/sema/Documents/work/React_HW/HW6/myapp/src/store/countReduser.js"],"sourcesContent":["const defaultState = [\n    {id: 1, title: 'Велосипед', count: 5},\n    {id: 2, title: 'Самокат', count: 4},\n    {id: 3, title: 'Гантели', count: 7},\n    {id: 4, title: 'Ракетки', count: 1}\n]\n\n    const DERC_COUNT = 'DERC_COUNT';\n    const INCR_COUNT = 'INCR_COUNT';\n    const DELL_PRODUCT = 'DELL_PRODUCT'\n    const RESET_COUNT = 'RESET_COUNT';\n\n    export const countReduser = (state = defaultState, action) => {\n        switch (action.type) {\n            case DERC_COUNT:\n                return state.map((el) => {\n                    if (el.id == action.payload) {\n                      return { ...el, count: el.count - 1 };\n                    }\n                    return el;\n                });\n               \n\n\n            case INCR_COUNT:\n                return {...state, count: state.count + action.payload};\n\n\n\n\n\n            case RESET_COUNT:\n                return {...state, count: 0};\n            default:\n                return state;\n        }\n    };\n\n    export const decrByPayloadAction = (payload) => ({\n        type: DERC_COUNT, payload\n    });\n    export const incrByPayloadAction = (payload) =>({\n        type: INCR_COUNT, payload\n    });\n    export const dellProduct = ({})\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CACjB;EAACC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAC,CAAC,EACrC;EAACF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAC,CAAC,EACnC;EAACF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAC,CAAC,EACnC;EAACF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAC,CAAC,CACtC;AAEG,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,WAAW,GAAG,aAAa;AAEjC,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGV,YAAY;EAAA,IAAEa,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKV,UAAU;MACX,OAAOK,KAAK,CAACM,GAAG,CAAEC,EAAE,IAAK;QACrB,IAAIA,EAAE,CAACf,EAAE,IAAIY,MAAM,CAACI,OAAO,EAAE;UAC3B,OAAO;YAAE,GAAGD,EAAE;YAAEb,KAAK,EAAEa,EAAE,CAACb,KAAK,GAAG;UAAE,CAAC;QACvC;QACA,OAAOa,EAAE;MACb,CAAC,CAAC;IAIN,KAAKX,UAAU;MACX,OAAO;QAAC,GAAGI,KAAK;QAAEN,KAAK,EAAEM,KAAK,CAACN,KAAK,GAAGU,MAAM,CAACI;MAAO,CAAC;IAM1D,KAAKV,WAAW;MACZ,OAAO;QAAC,GAAGE,KAAK;QAAEN,KAAK,EAAE;MAAC,CAAC;IAC/B;MACI,OAAOM,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMS,mBAAmB,GAAID,OAAO,KAAM;EAC7CH,IAAI,EAAEV,UAAU;EAAEa;AACtB,CAAC,CAAC;AACF,OAAO,MAAME,mBAAmB,GAAIF,OAAO,KAAK;EAC5CH,IAAI,EAAET,UAAU;EAAEY;AACtB,CAAC,CAAC;AACF,OAAO,MAAMG,WAAW,GAAI,CAAC,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}